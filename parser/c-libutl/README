.v
                     _       _               _    _
                    / \     / \             / \  / \
                   /  /    /  /          __/  (_/  /
                  /  /_   /  (_   _   _ (_   ___) /
                 /  // \ /  __ \ / \ / \ /  / /  /
                /  //  //  /_/ //  //  //  / /  /
               (__/(__/(______/(____,_/(___)(__/ 
..


.% Building the library
~~~~~~~~~~~~~~~~~~~~~~~

  The library has been tested with different combinations of compiler and
platforms.  It is know to work with:

.t
     Compiler                      Platform
    ---------------------------   ------------------------
    gcc 4.4.1                      Linux Ubuntu 9.10
    gcc 3.4.3                      OpenSolaris 5.11 (x86)
    gcc 3.4.2 (mingw)              Windows 7
    MS Visual C/C++ Express 2008   Windows 7
    Open Watcom 1.8                Windows 7
    Digital Mars 8.51              Windows 7
    Pelles C 6.00.6                Windows 7
..

  The following compilers do not provide enough C99 support to make the 
library work.

.t
     Compiler                      Platform
    ---------------------------   -------------------
    lcc-Win32                      Windows
    Borland C/C++ 5.5 (free)       Windows
..

.%% Using the makefile
''''''''''''''''''''''
  The makefile has only been tested with Linux and Win32 Mingw+Msys but should
work for any unix-like environment (e.g. cygwin) with the GCC toolchain.  
  
  The '<config.mk> file contains two configuration parameters:

.['|NO_ASM|]  The library contains small portions of Assembler code for i386.
              To use plain C equivalent, just uncomment the row.
              
 ['|SYS|]     It can be '|MINGW| or '|LINUX|.  It is usually autoconfigured
              by make but it can also be configured manually.
..

  From the root directory type: '|make dist| to build the library and 
the pmx tools.

  The '|dist| directory will contain all that you need to use libutl in
your project.
   
.%% Using the build scripts
'''''''''''''''''''''''''''
  The '|build| directory contains scripts to build the library using other
compilers.

  The '|win_build.bat| script will try to guess the compiler that is available
and will use it to compile the library and the basic tools.

.v
    D:\projects\clibutl>cd build
    D:\projects\clibutl\build> win_build
.. 

  Currently the following compilers for Windows are supported:
  
  .[Pelles C]
   [Visual C++ Express]
   [Open Watcom]
  ..

  .> NOTE: I'm not an expert in this compilers, please suggest different
     options to make it 
  .. 

.% Using the library
~~~~~~~~~~~~~~~~~~~~

  There are several ways to use '|libutl| in your project.
  
  .# Link the static library '|libutl.a| '(or '|libutl.lib| or whatever
     the extension is in your system) and include the header '|libutl.h|.
     
   # Use the object files and headers you need by linking/including them
     directly.
     
   # Use '|utl.h| alone. If you just need macros for logging, debugging,
     unit tests and error handling, simply include the '|utl.h| header.
     The example in '<'|utlh.c|=examples/utl_h/utlh.c#> shows how to do it. 

   # Use '|pmx| alone. The pattern matching functions have no dependencies
     on the other functions, you can simply include '|pmx.h| and link
     '|pmx.o| to your project.    
  ..

  That said, the simplest way to use '|libutl| is just to build the
distribution files '(see next section) and copy the static library '|libutl.a|
and the header file '|libutl.h| where your compiler/linker can find them.

.% Documentation
~~~~~~~~~~~~~~~~

  For the API documentation look at the header files in the '|src| directory.

.% Examples
~~~~~~~~~~~

  I'm firmly convinced that concrete examples are much better than exhaustive
documentation that's why I provided a set of them in the '|examples| directory.

  .['|pmx2c|]      This is actually a tool that comes with the libraries.
                   It takes a C source file with embedded pmx switches and 
                   produces a plain C file ready for compilation.
                   Uses a '/bootstrap/ technique to build itself.
                     
   ['|pmxshell|]   The patterns used by pmx may be not very intuitive. This
                   tool allows you to define a set of patterns and try to
                   match a string against them.
                   A useful function to understand how a pattern works is
                   "explain" that gives a textual description of a pattern.
                   
   ['|uncomment|]  Strips a C source file from comments. It's used in the
                   build process to remove the documentation comments 
                   within the library header '|libutl.h|
                   
   ['|cxrf|]       Simply collects identifiers from a C source file and counts
                   the occurence for each.
                    
   ['|fmt|]        A light markup text formatter to extract documentation
                   from the library source file.
                   
   ['|macro|]      A simple macro system inspired by 
                   '<musicpad:http://l01c.ouvaton.org/musicpad-help.html>
  .. 

  
.% Licence
~~~~~~~~~~
    
This software is distributed under the terms of the BSD license.

.v
==  BSD LICENCE  ===============================================================

 (C) by Remo Dentato (rdentato@gmail.com)
 All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.
    * Neither the name of the original author nor the names of its contributors
      may be used to endorse or promote products derived from this software
      without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


http://creativecommons.org/licenses/BSD/
http://opensource.org/licenses/bsd-license.php

================================================================================
..



  
  
